#!/usr/bin/with-contenv bash

# in case of missing permissions, e.g. --cap-drop CAP_DAC_OVERRIDE
chown -R root:root /config

# remove config-lock
find /config -name ".config-lock" -exec rm -f {} \;

# copy config.yml
if [[ -f /config/config.yml ]]; then
  echo "*** Using existing config.yml"
else
  echo "*** New config.yml from template"
  cp /defaults/config.example.yml /config/config.yml
fi

# install custom plugins
if [[ -n "${FG_PLUGINS}" ]]; then
  mkdir -p /config/plugins
  for plugin_name in ${FG_PLUGINS}; do
    plugin_src="/defaults/plugins/${plugin_name}.py"
    plugin_trg="/config/plugins/${plugin_name}.py"
    plugin_log="*** Installing plugin: '${plugin_name}'"
    if [[ -f "${plugin_src}" ]]; then
      if  [[ ! -f "${plugin_trg}" ]]; then
        cp "${plugin_src}" "${plugin_trg}" >/dev/null 2>&1 && \
          echo "${plugin_log} - successful" || \
          echo "${plugin_log} - copy failed"
      else
        echo "${plugin_log} - already exists. skipping ..."
      fi
    else
      echo "${plugin_log} - no such plugin available"
    fi
  done
fi

# set FG_WEBUI_PASSWD
if [[ -n "${FG_WEBUI_PASSWD}" ]]; then
  echo "*** Setting flexget web password"
  RESULT=/tmp/flexget_web.txt
  timeout 25 flexget -c /config/config.yml \
    --loglevel "${FG_LOG_LEVEL:-ERROR}" \
    --logfile "${FG_LOG_FILE:-flexget.log}" \
    web passwd "${FG_WEBUI_PASSWD}" | tee ${RESULT}
  if ! grep -q "Updated password" ${RESULT}; then
    exit 1
  fi
fi

# permissions
if [ "${FIX_DIR_OWNERSHIP_CONFIG}" = "1" ] || [ "${FIX_DIR_OWNERSHIP_CONFIG}" = "true" ]; then
  find /config \! \( -uid $(id -u abc) -gid $(id -g abc) \) -print0 | \
    xargs -0 --no-run-if-empty chown -h abc:abc
fi
if [ "${FIX_DIR_OWNERSHIP_DATA}" = "1" ] || [ "${FIX_DIR_OWNERSHIP_DATA}" = "true" ]; then
  find /data \! \( -uid $(id -u abc) -gid $(id -g abc) \) -print0 | \
    xargs -0 --no-run-if-empty chown -h abc:abc
fi

echo "*** Flexget v$(flexget -V | sed -n 1p) ready!"
